@using Newtonsoft.Json
@using Resources.Enums
@model EmployeeDepartmentViewModel

@{
    ViewData["Title"] = "Edit department";
}

<div class="modal-content">
    <div class="modal-header">
        <h4>Edit skill</h4>
        <button class="close" data-dismiss="modal" area-hidden="true">X</button>
    </div>
    <div class="modal-body">
        <div class="container">
            <form asp-controller="Employee" asp-action="EditDepartment" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <input hidden asp-for="EmployeeId" name="EmployeeId" value="@Model.EmployeeId" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Office</label>
                    <select id="OfficeSelect" asp-for="OfficeId" value="" onchange="changedSelect(this.value, 'DepartmentSelect', '/api/Department/GetDepartments')" asp-items="ViewBag.Offices" class="form-control">
                    </select>
                    <span asp-validation-for="OfficeId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label>Department</label>
                    <select id="DepartmentSelect" onchange="changedSelect(this.value, 'PositionSelect', '/api/Department/GetPositions')" asp-for="DepartmentId" class="form-control">
                    </select>
                    <span asp-validation-for="DepartmentId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label>Position</label>
                    <select id="PositionSelect" asp-for="PositionId" class="form-control"></select>
                    <span asp-validation-for="PositionId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Update" class="btn btn-primary" />
                </div>
            </form>
            
        </div>
    </div>
</div>
<script>

    async function changedSelect(value, change, uri) {
        const response = await fetch(`${uri}/${value}`);
        const json = await response.json();
        const chg = document.getElementById(change);
        if (chg.childNodes.length > 0) {
            chg.innerHTML = "";
            if (change == "DepartmentSelect") {
                document.getElementById("PositionSelect").innerHTML = "";
            }
        }
        json.forEach((item) => {
            const op = document.createElement('option');
            op.appendChild(document.createTextNode(item.Name));
            op.setAttribute('value', item.Id);
            chg.appendChild(op);
        });
    }
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

}